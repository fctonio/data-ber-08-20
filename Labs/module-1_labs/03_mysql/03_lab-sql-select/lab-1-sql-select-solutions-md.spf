<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>bank</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>kcid</key>
			<string>8538182464800515197</string>
			<key>name</key>
			<string>localhost</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8mb4</string>
			<key>contentFilterV2</key>
			<dict>
				<key>children</key>
				<array/>
				<key>filterClass</key>
				<string>groupNode</string>
				<key>isConjunction</key>
				<true/>
			</dict>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0
			b3BYJG9iamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRk
			YXRhgAGoCwwXGBkaHiVVJG51bGzTDQ4PEBMWV05TLmtleXNaTlMu
			b2JqZWN0c1YkY2xhc3OiERKAAoADohQVgASABYAHVHR5cGVUcm93
			c18QHVNlbGVjdGlvbkRldGFpbFR5cGVOU0luZGV4U2V00hsPHB1c
			TlNSYW5nZUNvdW50EACABtIfICEiWiRjbGFzc25hbWVYJGNsYXNz
			ZXNaTlNJbmRleFNldKIjJFpOU0luZGV4U2V0WE5TT2JqZWN00h8g
			JidcTlNEaWN0aW9uYXJ5oiYkAAgAEQAaACQAKQAyADcASQBMAFEA
			UwBcAGIAaQBxAHwAgwCGAIgAigCNAI8AkQCTAJgAnQC9AMIAzwDR
			ANMA2ADjAOwA9wD6AQUBDgETASAAAAAAAAACAQAAAAAAAAAoAAAA
			AAAAAAAAAAAAAAABIw==
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {842, 479}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>/*--------
LAB 03
--------*/
USE bank

-- What are the ids of the first 5 clients from disrict_id 1
SELECT
	client_id
FROM client
ORDER BY district_id, client_id ASC
LIMIT 5;

-- What is the id of the last client from district_id 72
SELECT
	client_id
FROM client
WHERE district_id = '72'
ORDER BY client_id DESC
LIMIT 1;

-- What are the 3 lowest amounts
SELECT 
	amount
FROM loan
ORDER BY amount ASC
LIMIT 3;

-- What are the possible values for status, ordered alphabetically in ascending order
SELECT 
	DISTINCT status 
FROM loan
ORDER BY status ASC;

-- What is the loan_id of the highest payment received
SELECT 
	loan_id
FROM loan
ORDER BY payments DESC
LIMIT 1;

-- What is the loan amount of the lowest 5 account_ids. Show the account_id and the corresponding amount
SELECT
	account_id,
	amount
FROM loan
ORDER BY account_id ASC
LIMIT 5; 

-- Which are the account_ids with the lowest loan amount have a loan duration of 60
SELECT
	account_id
FROM LOAN
WHERE duration = '60'
ORDER BY amount ASC
LIMIT 5;

--  What are the unique values of k_symbol
SELECT
	DISTINCT k_symbol
FROM `order`
ORDER BY k_symbol DESC;

-- Which are the order_ids from the client with the account_id 34
SELECT 
	order_id
FROM `order`
WHERE account_id = '34';

-- Which account_ids were responsible for orders between order_id 29540 and order_id 29560 (inclusive)
SELECT 
	DISTINCT account_id
FROM `order`
WHERE order_id &gt;= "29540"
	AND order_id &lt;= "29560";
	
-- What are the individual amounts that were sent to (account_to) id 30067122
SELECT 
	amount
FROM `order`
WHERE account_to = '30067122';

-- Show the trans_id, date, type and amount of the 10 first transactions from account_id = 793 in chronological order, from newest to oldest
SELECT 
	trans_id,
	date,
	type,
	amount
FROM trans
WHERE account_id = '793'
ORDER BY date DESC
LIMIT 10;

/*--------
LAB 04
--------*/

-- Of all districts with a district_id lower than 10, how many clients are from each district_id? Show the results sorted by district_id in ascending order

SELECT
	district_id,
	COUNT(client_ID) AS clients
FROM client
WHERE district_id &lt; 10
GROUP BY district_id
ORDER BY district_id ASC;

-- How many cards exist for each type? Rank the result starting with the most frequent type.
SELECT 
	type,
	COUNT(card_id) AS number_of_cards
FROM card
GROUP BY type
ORDER BY number_of_cards DESC;

-- Print the top 10 account_ids based on the sum of all of their loan amounts
SELECT
	account_id,
	sum(amount) AS amount_sum
FROM loan
GROUP BY account_id
ORDER BY amount_sum DESC
LIMIT 10;

-- Retrieve the number of loans issued for each day, before (excl) 930907, ordered by date in descending order
SELECT 
	date,
	COUNT(loan_id) AS number_of_loans
FROM loan
WHERE date &lt; '930907'
GROUP BY date
ORDER BY date DESC;

-- For each day in December 1997, count the number of loans issued for each unique loan duration, ordered by date and duration, both in ascending order. You can ignore days without any loans in your output.
SELECT 
	date,
	duration,
	COUNT(loan_id) AS number_of_loans
FROM loan
WHERE date &gt;= '971200'
	AND date &lt; '980000'
GROUP BY date, duration
ORDER BY date ASC;

--  For account_id 396, sum the amount of transactions for each type (VYDAJ = Outgoing, PRIJEM = Incoming). Your output should have the account_id, the type and the sum of amount, named as total_amount. Sort alphabetically by type
SELECT 
	 account_id,
	 type,
	 sum(amount) AS total_amount
FROM trans 
WHERE account_id = '396'
GROUP BY type
ORDER BY type ASC;

-- Translate the values for type to English, rename the column to transaction_type, round total_amount down to an integer
SELECT 
	 account_id,
	 IF(type = 'VYDAJ', 'Outgoing', 'Incoming') as transaction_type,
	 floor(sum(amount)) AS total_amount
FROM trans 
WHERE account_id = '396'
GROUP BY type
ORDER BY type ASC;

-- Modify you query so that it returns only one row, with a column for incoming amount, outgoing amount and the difference
SELECT
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) AS incoming,
	sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS outgoing,
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) - sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS difference
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		floor(sum(amount)) AS total_amount
		FROM trans 
		WHERE account_id = '396'
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id;
	
-- Rank the top 10 account_ids based on their difference

SELECT
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) - sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS difference
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		floor(sum(amount)) AS total_amount
		FROM trans 
		GROUP BY type, account_id
		ORDER BY type ASC
) summary
GROUP BY account_id
ORDER BY difference DESC
LIMIT 10;
</string>
			<key>table</key>
			<string>loan</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>214</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>-- Rank the top 10 account_ids based on their difference

SELECT
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) - sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS difference
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		floor(sum(amount)) AS total_amount
		FROM trans 
		GROUP BY type, account_id
		ORDER BY type ASC
) summary
GROUP BY account_id
ORDER BY difference DESC
LIMIT 10</string>
		<string>-- Rank the top 10 account_ids based on their difference

SELECT
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) - sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS difference
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		floor(sum(amount)) AS total_amount
		FROM trans 
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id
ORDER BY difference DESC
LIMIT 10</string>
		<string>-- Rank the top 10 account_ids based on their difference

SELECT
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) AS incoming,
	sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS outgoing,
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) - sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS difference
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		floor(sum(amount)) AS total_amount
		FROM trans 
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id
ORDER BY difference DESC
LIMIT 10</string>
		<string>-- Translate the values for type to English, rename the column to transaction_type, round total_amount down to an integer
SELECT 
	 account_id,
	 IF(type = 'VYDAJ', 'Outgoing', 'Incoming') as transaction_type,
	 floor(sum(amount)) AS total_amount
FROM trans 
WHERE account_id = '396'
GROUP BY type
ORDER BY type ASC</string>
		<string>-- Translate the values for type to English, rename the column to transaction_type, round total_amount down to an integer
SELECT 
	 account_id,
	 IF(type = 'VYDAJ', 'Outgoing', 'Incoming'),
	 type as transaction_type,
	 floor(sum(amount)) AS total_amount
FROM trans 
WHERE account_id = '396'
GROUP BY type
ORDER BY type ASC</string>
		<string>-- Translate the values for type to English, rename the column to transaction_type, round total_amount down to an integer
SELECT 
	 account_id,
	 IF(type = 'VYDAJ', 'Outgoing'),
	 type as transaction_type,
	 floor(sum(amount)) AS total_amount
FROM trans 
WHERE account_id = '396'
GROUP BY type
ORDER BY type ASC</string>
		<string>-- Translate the values for type to English, rename the column to transaction_type, round total_amount down to an integer
SELECT 
	 account_id,
	 IF(type = 'VYDAJ', 'Outgoing') 
	 type as transaction_type,
	 floor(sum(amount)) AS total_amount
FROM trans 
WHERE account_id = '396'
GROUP BY type
ORDER BY type ASC</string>
		<string>-- Translate the values for type to English, rename the column to transaction_type, round total_amount down to an integer
SELECT 
	 account_id,
	 type as transaction_type,
	 floor(sum(amount)) AS total_amount
FROM trans 
WHERE account_id = '396'
GROUP BY type
ORDER BY type ASC</string>
		<string>--  For account_id 396, sum the amount of transactions for each type (VYDAJ = Outgoing, PRIJEM = Incoming). Your output should have the account_id, the type and the sum of amount, named as total_amount. Sort alphabetically by type
SELECT 
	 account_id,
	 type,
	 sum(amount) AS total_amount
FROM trans 
WHERE account_id = '396'
GROUP BY type
ORDER BY type ASC</string>
		<string>-- Modify you query so that it returns only one row, with a column for incoming amount, outgoing amount and the difference
SELECT
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) AS incoming,
	sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS outgoing,
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) - sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS difference
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		floor(sum(amount)) AS total_amount
		FROM trans 
		WHERE account_id = '396'
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id</string>
		<string>-- Modify you query so that it returns only one row, with a column for incoming amount, outgoing amount and the difference
SELECT
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) AS incoming,
	sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS outgoing,
	incoming - outgoing AS difference
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		floor(sum(amount)) AS total_amount
		FROM trans 
		WHERE account_id = '396'
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id</string>
		<string>-- Modify you query so that it returns only one row, with a column for incoming amount, outgoing amount and the difference
SELECT
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) AS incoming,
	sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS outgoing,
	min(total_amount) - max(total_amount) AS difference
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		floor(sum(amount)) AS total_amount
		FROM trans 
		WHERE account_id = '396'
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id</string>
		<string>-- Modify you query so that it returns only one row, with a column for incoming amount, outgoing amount and the difference
CREATE TABLE temp_inc_out_table as
account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN floor(total_amount)
	END) AS incoming,
	sum(CASE
	WHEN type = 'VYDAJ' THEN floor(total_amount)
	END) AS outgoing,
	floor(min(total_amount) - max(total_amount)) AS difference
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		sum(amount) AS total_amount
		FROM trans 
		WHERE account_id = '396'
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id</string>
		<string>-- Modify you query so that it returns only one row, with a column for incoming amount, outgoing amount and the difference
SELECT 
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN floor(total_amount)
	END) AS incoming,
	sum(CASE
	WHEN type = 'VYDAJ' THEN floor(total_amount)
	END) AS outgoing,
	min(total_amount) - max(total_amount) as difference
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		sum(amount) AS total_amount
		FROM trans 
		WHERE account_id = '396'
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id</string>
		<string>-- Modify you query so that it returns only one row, with a column for incoming amount, outgoing amount and the difference
SELECT 
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN floor(total_amount)
	END) AS incoming,
	sum(CASE
	WHEN type = 'VYDAJ' THEN floor(total_amount)
	END) AS outgoing,
	incoming - outgoing as difference
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		sum(amount) AS total_amount
		FROM trans 
		WHERE account_id = '396'
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id</string>
		<string>-- Modify you query so that it returns only one row, with a column for incoming amount, outgoing amount and the difference
SELECT 
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN floor(total_amount)
	END) AS incoming,
	sum(CASE
	WHEN type = 'VYDAJ' THEN floor(total_amount)
	END) AS outgoing
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		sum(amount) AS total_amount
		FROM trans 
		WHERE account_id = '396'
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id</string>
		<string>-- Modify you query so that it returns only one row, with a column for incoming amount, outgoing amount and the difference
SELECT 
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN floor(total_amount)
	END) AS incoming,
	sum(CASE
	WHEN type = 'VYDAJ' THEN floor(total_amount)
	END) AS outgoing,
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		sum(amount) AS total_amount
		FROM trans 
		WHERE account_id = '396'
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id</string>
		<string>-- Modify you query so that it returns only one row, with a column for incoming amount, outgoing amount and the difference
SELECT 
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) AS incoming,
	sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS outgoing,
	incoming - outgoing as difference
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		sum(amount) AS total_amount
		FROM trans 
		WHERE account_id = '396'
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id</string>
		<string>-- Modify you query so that it returns only one row, with a column for incoming amount, outgoing amount and the difference
SELECT 
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) AS incoming,
	sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS outgoing
	incoming - outgoing as difference
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		sum(amount) AS total_amount
		FROM trans 
		WHERE account_id = '396'
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id</string>
		<string>-- Modify you query so that it returns only one row, with a column for incoming amount, outgoing amount and the difference
SELECT 
	account_id, 
	sum(CASE
	WHEN type = 'PRIJEM' THEN total_amount
	END) AS incoming,
	sum(CASE
	WHEN type = 'VYDAJ' THEN total_amount
	END) AS outgoing
FROM (
    	SELECT 
	 		account_id,
	 		type,
	 		sum(amount) AS total_amount
		FROM trans 
		WHERE account_id = '396'
		GROUP BY type
		ORDER BY type ASC
) summary
GROUP BY account_id</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>8.0.20</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
